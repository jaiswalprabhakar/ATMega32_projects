
GccApplication10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003ca  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000043e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800060  00800060  0000043e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000043e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000470  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000004ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000069f  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005b1  00000000  00000000  00000b73  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047c  00000000  00000000  00001124  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  000015a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000353  00000000  00000000  000015d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000048  00000000  00000000  00001927  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  0000196f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	ac 36       	cpi	r26, 0x6C	; 108
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 71 00 	call	0xe2	; 0xe2 <main>
  74:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <get_ir_state>:
#include <avr/sfr_defs.h>
#include <util/delay.h>
int ir1,ir2,ir3,ir4,ir5;
int count = 0;
void get_ir_state(){
	ir1 = bit_is_clear(PIND,3);
  7c:	90 b3       	in	r25, 0x10	; 16
  7e:	96 95       	lsr	r25
  80:	96 95       	lsr	r25
  82:	96 95       	lsr	r25
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	98 27       	eor	r25, r24
  88:	91 70       	andi	r25, 0x01	; 1
  8a:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <ir1>
  8e:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <ir1+0x1>
	ir2 = bit_is_clear(PIND,4);
  92:	90 b3       	in	r25, 0x10	; 16
  94:	92 95       	swap	r25
  96:	9f 70       	andi	r25, 0x0F	; 15
  98:	98 27       	eor	r25, r24
  9a:	91 70       	andi	r25, 0x01	; 1
  9c:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <ir2>
  a0:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <ir2+0x1>
	ir3 = bit_is_clear(PIND,5);
  a4:	90 b3       	in	r25, 0x10	; 16
  a6:	92 95       	swap	r25
  a8:	96 95       	lsr	r25
  aa:	97 70       	andi	r25, 0x07	; 7
  ac:	98 27       	eor	r25, r24
  ae:	91 70       	andi	r25, 0x01	; 1
  b0:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <ir3>
  b4:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <ir3+0x1>
	ir4 = bit_is_clear(PIND,2);
  b8:	90 b3       	in	r25, 0x10	; 16
  ba:	96 95       	lsr	r25
  bc:	96 95       	lsr	r25
  be:	98 27       	eor	r25, r24
  c0:	91 70       	andi	r25, 0x01	; 1
  c2:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <ir4>
  c6:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <ir4+0x1>
	ir5 = bit_is_clear(PIND,6);
  ca:	90 b3       	in	r25, 0x10	; 16
  cc:	92 95       	swap	r25
  ce:	96 95       	lsr	r25
  d0:	96 95       	lsr	r25
  d2:	93 70       	andi	r25, 0x03	; 3
  d4:	89 27       	eor	r24, r25
  d6:	81 70       	andi	r24, 0x01	; 1
  d8:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <ir5>
  dc:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <ir5+0x1>
  e0:	08 95       	ret

000000e2 <main>:
	
}

int main()
{
	DDRA = 0xFF;
  e2:	8f ef       	ldi	r24, 0xFF	; 255
  e4:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0x00;
  e6:	11 ba       	out	0x11, r1	; 17
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 1)
			PORTA = 0b00100000;
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5 == 0){
				PORTA = 0b10100000;
  e8:	10 ea       	ldi	r17, 0xA0	; 160
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 0)
			PORTA = 0b10000000;
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 1)
			PORTA = 0b00100000;
  ea:	d0 e2       	ldi	r29, 0x20	; 32
			if((ir1 == 0 && ir2 == 0 && ir3 == 1)){
				PORTA = 0b00100000;
			}
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 0)
			PORTA = 0b10000000;
  ec:	c0 e8       	ldi	r28, 0x80	; 128
{
	DDRA = 0xFF;
	DDRD = 0x00;
	
	while(1){
			ir1 = ir2 = ir3 = ir4 = ir5 = 0;
  ee:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <ir5+0x1>
  f2:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <ir5>
  f6:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <ir4+0x1>
  fa:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <ir4>
  fe:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <ir3+0x1>
 102:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <ir3>
 106:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <ir2+0x1>
 10a:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <ir2>
 10e:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <ir1+0x1>
 112:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <ir1>
			
		get_ir_state();
 116:	0e 94 3e 00 	call	0x7c	; 0x7c <get_ir_state>
			
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 0){
 11a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 11e:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 122:	89 2b       	or	r24, r25
 124:	09 f0       	breq	.+2      	; 0x128 <main+0x46>
 126:	30 c1       	rjmp	.+608    	; 0x388 <main+0x2a6>
 128:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 12c:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	09 f5       	brne	.+66     	; 0x176 <main+0x94>
 134:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 138:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 13c:	89 2b       	or	r24, r25
 13e:	d9 f4       	brne	.+54     	; 0x176 <main+0x94>
				PORTA = 0b10100000;
 140:	1b bb       	out	0x1b, r17	; 27
			}
			if((ir1 == 1 && ir2 == 0 && ir3 == 0)){
 142:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 146:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	69 f4       	brne	.+26     	; 0x168 <main+0x86>
 14e:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 152:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 156:	89 2b       	or	r24, r25
 158:	19 f5       	brne	.+70     	; 0x1a0 <main+0xbe>
 15a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 15e:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 162:	89 2b       	or	r24, r25
 164:	e9 f4       	brne	.+58     	; 0x1a0 <main+0xbe>
				PORTA = 0b10000000;
 166:	cb bb       	out	0x1b, r28	; 27
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1)){
 168:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 16c:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 170:	00 97       	sbiw	r24, 0x00	; 0
 172:	09 f0       	breq	.+2      	; 0x176 <main+0x94>
 174:	00 c1       	rjmp	.+512    	; 0x376 <main+0x294>
 176:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 17a:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 17e:	89 2b       	or	r24, r25
 180:	19 f5       	brne	.+70     	; 0x1c8 <main+0xe6>
 182:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 186:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	e9 f4       	brne	.+58     	; 0x1c8 <main+0xe6>
				PORTA = 0b00100000;
 18e:	db bb       	out	0x1b, r29	; 27
			}
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 0)
 190:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 194:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 198:	01 97       	sbiw	r24, 0x01	; 1
 19a:	09 f0       	breq	.+2      	; 0x19e <main+0xbc>
 19c:	04 c1       	rjmp	.+520    	; 0x3a6 <main+0x2c4>
 19e:	fb c0       	rjmp	.+502    	; 0x396 <main+0x2b4>
 1a0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 1a4:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	e9 f4       	brne	.+58     	; 0x1e6 <main+0x104>
 1ac:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 1b0:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 1b4:	89 2b       	or	r24, r25
 1b6:	09 f0       	breq	.+2      	; 0x1ba <main+0xd8>
 1b8:	fe c0       	rjmp	.+508    	; 0x3b6 <main+0x2d4>
			PORTA = 0b10000000;
 1ba:	cb bb       	out	0x1b, r28	; 27
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 1)
 1bc:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 1c0:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 1c4:	89 2b       	or	r24, r25
 1c6:	79 f4       	brne	.+30     	; 0x1e6 <main+0x104>
 1c8:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 1cc:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	09 f0       	breq	.+2      	; 0x1d6 <main+0xf4>
 1d4:	8c cf       	rjmp	.-232    	; 0xee <main+0xc>
 1d6:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 1da:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	09 f0       	breq	.+2      	; 0x1e4 <main+0x102>
 1e2:	85 cf       	rjmp	.-246    	; 0xee <main+0xc>
			PORTA = 0b00100000;
 1e4:	db bb       	out	0x1b, r29	; 27
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5 == 0){
 1e6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 1ea:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	09 f0       	breq	.+2      	; 0x1f4 <main+0x112>
 1f2:	7d cf       	rjmp	.-262    	; 0xee <main+0xc>
 1f4:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 1f8:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	09 f0       	breq	.+2      	; 0x202 <main+0x120>
 200:	76 cf       	rjmp	.-276    	; 0xee <main+0xc>
 202:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 206:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 20a:	01 97       	sbiw	r24, 0x01	; 1
 20c:	d9 f4       	brne	.+54     	; 0x244 <main+0x162>
 20e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ir4>
 212:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <ir4+0x1>
 216:	89 2b       	or	r24, r25
 218:	a9 f4       	brne	.+42     	; 0x244 <main+0x162>
 21a:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <ir5>
 21e:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <ir5+0x1>
 222:	89 2b       	or	r24, r25
 224:	79 f4       	brne	.+30     	; 0x244 <main+0x162>
				PORTA = 0b10100000;
 226:	1b bb       	out	0x1b, r17	; 27
			}
			if((ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4==1 && ir5 ==1))
 228:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 22c:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	09 f0       	breq	.+2      	; 0x236 <main+0x154>
 234:	5c cf       	rjmp	.-328    	; 0xee <main+0xc>
 236:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 23a:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	09 f0       	breq	.+2      	; 0x244 <main+0x162>
 242:	55 cf       	rjmp	.-342    	; 0xee <main+0xc>
 244:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 248:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 24c:	01 97       	sbiw	r24, 0x01	; 1
 24e:	09 f0       	breq	.+2      	; 0x252 <main+0x170>
 250:	4e cf       	rjmp	.-356    	; 0xee <main+0xc>
 252:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ir4>
 256:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <ir4+0x1>
 25a:	01 97       	sbiw	r24, 0x01	; 1
 25c:	09 f0       	breq	.+2      	; 0x260 <main+0x17e>
 25e:	47 cf       	rjmp	.-370    	; 0xee <main+0xc>
 260:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <ir5>
 264:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <ir5+0x1>
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	09 f0       	breq	.+2      	; 0x26e <main+0x18c>
 26c:	40 cf       	rjmp	.-384    	; 0xee <main+0xc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 26e:	2f eb       	ldi	r18, 0xBF	; 191
 270:	87 e2       	ldi	r24, 0x27	; 39
 272:	99 e0       	ldi	r25, 0x09	; 9
 274:	21 50       	subi	r18, 0x01	; 1
 276:	80 40       	sbci	r24, 0x00	; 0
 278:	90 40       	sbci	r25, 0x00	; 0
 27a:	e1 f7       	brne	.-8      	; 0x274 <main+0x192>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <main+0x19c>
 27e:	00 00       	nop
			{
				_delay_ms(3000);
				count+=1;
 280:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 284:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 288:	01 96       	adiw	r24, 0x01	; 1
 28a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 28e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	}
	
	END : 
	while(1){
		if(count == 1){
			PORTA = 0b10100000;
 292:	c0 ea       	ldi	r28, 0xA0	; 160
			*/
	}
	
	END : 
	while(1){
		if(count == 1){
 294:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 298:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 29c:	01 97       	sbiw	r24, 0x01	; 1
 29e:	09 f4       	brne	.+2      	; 0x2a2 <main+0x1c0>
			PORTA = 0b10100000;
 2a0:	cb bb       	out	0x1b, r28	; 27
		}
		
		get_ir_state();
 2a2:	0e 94 3e 00 	call	0x7c	; 0x7c <get_ir_state>
		
		if(ir1 == 0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 0){
 2a6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 2aa:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 2ae:	89 2b       	or	r24, r25
 2b0:	c9 f5       	brne	.+114    	; 0x324 <main+0x242>
 2b2:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 2b6:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 2ba:	89 2b       	or	r24, r25
 2bc:	09 f0       	breq	.+2      	; 0x2c0 <main+0x1de>
 2be:	51 c0       	rjmp	.+162    	; 0x362 <main+0x280>
 2c0:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 2c4:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 2c8:	89 2b       	or	r24, r25
 2ca:	c9 f4       	brne	.+50     	; 0x2fe <main+0x21c>
 2cc:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ir4>
 2d0:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <ir4+0x1>
 2d4:	89 2b       	or	r24, r25
 2d6:	99 f4       	brne	.+38     	; 0x2fe <main+0x21c>
 2d8:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <ir5>
 2dc:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <ir5+0x1>
 2e0:	89 2b       	or	r24, r25
 2e2:	69 f4       	brne	.+26     	; 0x2fe <main+0x21c>
			PORTA = 0b10100000;
 2e4:	cb bb       	out	0x1b, r28	; 27
		}
		if(ir1 == 0 && ir2 == 0 && ir3 == 1 && ir4 == 0 && ir5 == 0){
 2e6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 2ea:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 2ee:	89 2b       	or	r24, r25
 2f0:	c9 f4       	brne	.+50     	; 0x324 <main+0x242>
 2f2:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 2f6:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 2fa:	89 2b       	or	r24, r25
 2fc:	91 f5       	brne	.+100    	; 0x362 <main+0x280>
 2fe:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 302:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 306:	01 97       	sbiw	r24, 0x01	; 1
 308:	61 f5       	brne	.+88     	; 0x362 <main+0x280>
 30a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ir4>
 30e:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <ir4+0x1>
 312:	89 2b       	or	r24, r25
 314:	31 f5       	brne	.+76     	; 0x362 <main+0x280>
 316:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <ir5>
 31a:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <ir5+0x1>
 31e:	89 2b       	or	r24, r25
 320:	01 f5       	brne	.+64     	; 0x362 <main+0x280>
			PORTA = 0b10100000;
 322:	cb bb       	out	0x1b, r28	; 27
		}
		if(ir1  == 1 && ir2 == 1 && ir3 == 1 && ir4 == 1 && ir5 == 1){
 324:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 328:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 32c:	01 97       	sbiw	r24, 0x01	; 1
 32e:	c9 f4       	brne	.+50     	; 0x362 <main+0x280>
 330:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 334:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	99 f4       	brne	.+38     	; 0x362 <main+0x280>
 33c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 340:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 344:	01 97       	sbiw	r24, 0x01	; 1
 346:	69 f4       	brne	.+26     	; 0x362 <main+0x280>
 348:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ir4>
 34c:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <ir4+0x1>
 350:	01 97       	sbiw	r24, 0x01	; 1
 352:	39 f4       	brne	.+14     	; 0x362 <main+0x280>
 354:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <ir5>
 358:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <ir5+0x1>
 35c:	01 97       	sbiw	r24, 0x01	; 1
 35e:	09 f4       	brne	.+2      	; 0x362 <main+0x280>
			PORTA = 0x00;
 360:	1b ba       	out	0x1b, r1	; 27
		}
		
		count++;
 362:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 366:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 36a:	01 96       	adiw	r24, 0x01	; 1
 36c:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 370:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	}
 374:	8f cf       	rjmp	.-226    	; 0x294 <main+0x1b2>
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1)){
				PORTA = 0b00100000;
			}
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 0)
 376:	01 97       	sbiw	r24, 0x01	; 1
 378:	09 f0       	breq	.+2      	; 0x37c <main+0x29a>
 37a:	b9 ce       	rjmp	.-654    	; 0xee <main+0xc>
 37c:	11 cf       	rjmp	.-478    	; 0x1a0 <main+0xbe>
				PORTA = 0b10100000;
			}
			if((ir1 == 1 && ir2 == 0 && ir3 == 0)){
				PORTA = 0b10000000;
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1)){
 37e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 382:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 386:	f7 cf       	rjmp	.-18     	; 0x376 <main+0x294>
			
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 0){
				PORTA = 0b10100000;
			}
			if((ir1 == 1 && ir2 == 0 && ir3 == 0)){
 388:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 38c:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 390:	01 97       	sbiw	r24, 0x01	; 1
 392:	a9 f7       	brne	.-22     	; 0x37e <main+0x29c>
 394:	dc ce       	rjmp	.-584    	; 0x14e <main+0x6c>
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1)){
				PORTA = 0b00100000;
			}
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 0)
 396:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 39a:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 39e:	01 97       	sbiw	r24, 0x01	; 1
 3a0:	09 f0       	breq	.+2      	; 0x3a4 <main+0x2c2>
 3a2:	28 cf       	rjmp	.-432    	; 0x1f4 <main+0x112>
 3a4:	03 cf       	rjmp	.-506    	; 0x1ac <main+0xca>
			PORTA = 0b10000000;
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 1)
 3a6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 3aa:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 3ae:	89 2b       	or	r24, r25
 3b0:	09 f0       	breq	.+2      	; 0x3b4 <main+0x2d2>
 3b2:	9d ce       	rjmp	.-710    	; 0xee <main+0xc>
 3b4:	09 cf       	rjmp	.-494    	; 0x1c8 <main+0xe6>
			PORTA = 0b00100000;
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5 == 0){
 3b6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 3ba:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 3be:	01 97       	sbiw	r24, 0x01	; 1
 3c0:	09 f4       	brne	.+2      	; 0x3c4 <main+0x2e2>
 3c2:	1f cf       	rjmp	.-450    	; 0x202 <main+0x120>
 3c4:	94 ce       	rjmp	.-728    	; 0xee <main+0xc>

000003c6 <_exit>:
 3c6:	f8 94       	cli

000003c8 <__stop_program>:
 3c8:	ff cf       	rjmp	.-2      	; 0x3c8 <__stop_program>
