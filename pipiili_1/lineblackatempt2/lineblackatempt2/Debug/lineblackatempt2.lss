
lineblackatempt2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003fe  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000472  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800060  00800060  00000472  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000472  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000004e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000065a  00000000  00000000  00000500  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000570  00000000  00000000  00000b5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000048a  00000000  00000000  000010ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001554  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000340  00000000  00000000  00001578  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000046  00000000  00000000  000018b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  000018fe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	aa 36       	cpi	r26, 0x6A	; 106
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#include <avr/sfr_defs.h>
#include <util/delay.h>
int ir1,ir2,ir3,ir4,ir5;
int main()
{
	DDRA = 0xFF;
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0x00;
  80:	11 ba       	out	0x11, r1	; 17
	
	while(1){
		
		
		ir1 = bit_is_clear(PIND,2);
  82:	91 e0       	ldi	r25, 0x01	; 1
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	50 e0       	ldi	r21, 0x00	; 0
  88:	40 e0       	ldi	r20, 0x00	; 0
		
		
		
		if((ir1==1 && ir2 == 1 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==1 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 0))
		{
			PORTA = 0b10100000;
  8a:	b0 ea       	ldi	r27, 0xA0	; 160
		{
	
	
				//PORTA = 0b00000000;
				_delay_us(400);
				PORTA = 0b01010000; // back
  8c:	10 e5       	ldi	r17, 0x50	; 80
		{
		
		 
			//PORTA = 0b00000000;
			//_delay_us(20);
			PORTA = 0b01100000; // Smooth Right
  8e:	c0 e6       	ldi	r28, 0x60	; 96
		{
			
			
			//PORTA = 0b00000000;
			//_delay_us(20);
			PORTA = 0b10010000; // Smooth Left
  90:	d0 e9       	ldi	r29, 0x90	; 144
	DDRD = 0x00;
	
	while(1){
		
		
		ir1 = bit_is_clear(PIND,2);
  92:	20 b3       	in	r18, 0x10	; 16
  94:	79 2f       	mov	r23, r25
  96:	68 2f       	mov	r22, r24
  98:	32 2f       	mov	r19, r18
  9a:	34 70       	andi	r19, 0x04	; 4
  9c:	22 ff       	sbrs	r18, 2
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <main+0x28>
  a0:	75 2f       	mov	r23, r21
  a2:	64 2f       	mov	r22, r20
  a4:	70 93 68 00 	sts	0x0068, r23	; 0x800068 <ir1>
  a8:	60 93 69 00 	sts	0x0069, r22	; 0x800069 <ir1+0x1>
		ir2 = bit_is_clear(PIND,3);
  ac:	20 b3       	in	r18, 0x10	; 16
  ae:	79 2f       	mov	r23, r25
  b0:	68 2f       	mov	r22, r24
  b2:	e2 2f       	mov	r30, r18
  b4:	e8 70       	andi	r30, 0x08	; 8
  b6:	23 ff       	sbrs	r18, 3
  b8:	02 c0       	rjmp	.+4      	; 0xbe <main+0x42>
  ba:	75 2f       	mov	r23, r21
  bc:	64 2f       	mov	r22, r20
  be:	70 93 66 00 	sts	0x0066, r23	; 0x800066 <ir2>
  c2:	60 93 67 00 	sts	0x0067, r22	; 0x800067 <ir2+0x1>
		ir3 = bit_is_clear(PIND,4);
  c6:	20 b3       	in	r18, 0x10	; 16
  c8:	79 2f       	mov	r23, r25
  ca:	68 2f       	mov	r22, r24
  cc:	f2 2f       	mov	r31, r18
  ce:	f0 71       	andi	r31, 0x10	; 16
  d0:	24 ff       	sbrs	r18, 4
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <main+0x5c>
  d4:	75 2f       	mov	r23, r21
  d6:	64 2f       	mov	r22, r20
  d8:	70 93 62 00 	sts	0x0062, r23	; 0x800062 <ir3>
  dc:	60 93 63 00 	sts	0x0063, r22	; 0x800063 <ir3+0x1>
		ir4 = bit_is_clear(PIND,5);
  e0:	20 b3       	in	r18, 0x10	; 16
  e2:	79 2f       	mov	r23, r25
  e4:	68 2f       	mov	r22, r24
  e6:	a2 2f       	mov	r26, r18
  e8:	a0 72       	andi	r26, 0x20	; 32
  ea:	25 ff       	sbrs	r18, 5
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <main+0x76>
  ee:	75 2f       	mov	r23, r21
  f0:	64 2f       	mov	r22, r20
  f2:	70 93 60 00 	sts	0x0060, r23	; 0x800060 <__DATA_REGION_ORIGIN__>
  f6:	60 93 61 00 	sts	0x0061, r22	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
		ir5 = bit_is_clear(PIND,6);
  fa:	20 b3       	in	r18, 0x10	; 16
  fc:	79 2f       	mov	r23, r25
  fe:	68 2f       	mov	r22, r24
 100:	02 2f       	mov	r16, r18
 102:	00 74       	andi	r16, 0x40	; 64
 104:	26 ff       	sbrs	r18, 6
 106:	02 c0       	rjmp	.+4      	; 0x10c <main+0x90>
 108:	75 2f       	mov	r23, r21
 10a:	64 2f       	mov	r22, r20
 10c:	70 93 64 00 	sts	0x0064, r23	; 0x800064 <ir5>
 110:	60 93 65 00 	sts	0x0065, r22	; 0x800065 <ir5+0x1>
		
		
		
		if((ir1==1 && ir2 == 1 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==1 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 0))
 114:	31 11       	cpse	r19, r1
 116:	0f c0       	rjmp	.+30     	; 0x136 <main+0xba>
 118:	e1 11       	cpse	r30, r1
 11a:	05 c0       	rjmp	.+10     	; 0x126 <main+0xaa>
 11c:	ff 23       	and	r31, r31
 11e:	a9 f0       	breq	.+42     	; 0x14a <main+0xce>
 120:	a1 11       	cpse	r26, r1
 122:	31 c1       	rjmp	.+610    	; 0x386 <main+0x30a>
 124:	06 c0       	rjmp	.+12     	; 0x132 <main+0xb6>
 126:	ee 23       	and	r30, r30
 128:	81 f0       	breq	.+32     	; 0x14a <main+0xce>
 12a:	ff 23       	and	r31, r31
 12c:	71 f0       	breq	.+28     	; 0x14a <main+0xce>
 12e:	aa 23       	and	r26, r26
 130:	61 f0       	breq	.+24     	; 0x14a <main+0xce>
 132:	00 23       	and	r16, r16
 134:	49 f0       	breq	.+18     	; 0x148 <main+0xcc>
 136:	33 23       	and	r19, r19
 138:	41 f0       	breq	.+16     	; 0x14a <main+0xce>
 13a:	ee 23       	and	r30, r30
 13c:	31 f0       	breq	.+12     	; 0x14a <main+0xce>
 13e:	ff 23       	and	r31, r31
 140:	21 f0       	breq	.+8      	; 0x14a <main+0xce>
 142:	aa 23       	and	r26, r26
 144:	11 f0       	breq	.+4      	; 0x14a <main+0xce>
 146:	01 11       	cpse	r16, r1
		{
			PORTA = 0b10100000;
 148:	bb bb       	out	0x1b, r27	; 27
		}
		if((ir1==1 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 1 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==1 && ir2 == 0 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 1))
 14a:	20 91 68 00 	lds	r18, 0x0068	; 0x800068 <ir1>
 14e:	30 91 69 00 	lds	r19, 0x0069	; 0x800069 <ir1+0x1>
 152:	22 30       	cpi	r18, 0x02	; 2
 154:	31 05       	cpc	r19, r1
 156:	78 f4       	brcc	.+30     	; 0x176 <main+0xfa>
 158:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <ir2>
 15c:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <ir2+0x1>
 160:	67 2b       	or	r22, r23
 162:	49 f4       	brne	.+18     	; 0x176 <main+0xfa>
 164:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <ir3>
 168:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <ir3+0x1>
 16c:	61 30       	cpi	r22, 0x01	; 1
 16e:	71 05       	cpc	r23, r1
 170:	09 f0       	breq	.+2      	; 0x174 <main+0xf8>
 172:	ef c0       	rjmp	.+478    	; 0x352 <main+0x2d6>
 174:	21 c0       	rjmp	.+66     	; 0x1b8 <main+0x13c>
 176:	21 15       	cp	r18, r1
 178:	31 05       	cpc	r19, r1
 17a:	89 f4       	brne	.+34     	; 0x19e <main+0x122>
 17c:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <ir2>
 180:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <ir2+0x1>
 184:	23 2b       	or	r18, r19
 186:	09 f0       	breq	.+2      	; 0x18a <main+0x10e>
 188:	09 c1       	rjmp	.+530    	; 0x39c <main+0x320>
 18a:	01 c1       	rjmp	.+514    	; 0x38e <main+0x312>
 18c:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <ir3>
 190:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <ir3+0x1>
 194:	21 30       	cpi	r18, 0x01	; 1
 196:	31 05       	cpc	r19, r1
 198:	09 f0       	breq	.+2      	; 0x19c <main+0x120>
 19a:	ad c0       	rjmp	.+346    	; 0x2f6 <main+0x27a>
 19c:	25 c1       	rjmp	.+586    	; 0x3e8 <main+0x36c>
 19e:	21 30       	cpi	r18, 0x01	; 1
 1a0:	31 05       	cpc	r19, r1
 1a2:	09 f4       	brne	.+2      	; 0x1a6 <main+0x12a>
 1a4:	04 c1       	rjmp	.+520    	; 0x3ae <main+0x332>
 1a6:	2f c0       	rjmp	.+94     	; 0x206 <main+0x18a>
 1a8:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <ir3>
 1ac:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <ir3+0x1>
 1b0:	23 2b       	or	r18, r19
 1b2:	09 f4       	brne	.+2      	; 0x1b6 <main+0x13a>
 1b4:	d6 c0       	rjmp	.+428    	; 0x362 <main+0x2e6>
 1b6:	27 c0       	rjmp	.+78     	; 0x206 <main+0x18a>
 1b8:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1bc:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1c0:	61 30       	cpi	r22, 0x01	; 1
 1c2:	71 05       	cpc	r23, r1
 1c4:	c1 f0       	breq	.+48     	; 0x1f6 <main+0x17a>
 1c6:	23 2b       	or	r18, r19
 1c8:	f1 f4       	brne	.+60     	; 0x206 <main+0x18a>
 1ca:	f9 c0       	rjmp	.+498    	; 0x3be <main+0x342>
 1cc:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <ir2>
 1d0:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <ir2+0x1>
 1d4:	23 2b       	or	r18, r19
 1d6:	09 f0       	breq	.+2      	; 0x1da <main+0x15e>
 1d8:	8e c0       	rjmp	.+284    	; 0x2f6 <main+0x27a>
 1da:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <ir3>
 1de:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <ir3+0x1>
 1e2:	23 2b       	or	r18, r19
 1e4:	09 f0       	breq	.+2      	; 0x1e8 <main+0x16c>
 1e6:	87 c0       	rjmp	.+270    	; 0x2f6 <main+0x27a>
 1e8:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1ec:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1f0:	23 2b       	or	r18, r19
 1f2:	09 f0       	breq	.+2      	; 0x1f6 <main+0x17a>
 1f4:	80 c0       	rjmp	.+256    	; 0x2f6 <main+0x27a>
 1f6:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <ir5>
 1fa:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <ir5+0x1>
 1fe:	21 30       	cpi	r18, 0x01	; 1
 200:	31 05       	cpc	r19, r1
 202:	09 f4       	brne	.+2      	; 0x206 <main+0x18a>
		{
			
			
			//PORTA = 0b00000000;
			//_delay_us(20);
			PORTA = 0b10010000; // Smooth Left
 204:	db bb       	out	0x1b, r29	; 27
			//_delay_us(20);
			PORTA = 0b10010000; // Sharp Left
			}
		}*/
		
		if((ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5== 1) || (ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5== 0) || (ir1 == 1 && ir2 == 1 && ir3 == 0 && ir4 == 0 && ir5== 0) || (ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 1 && ir5== 0) || (ir1 == 1 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5== 0) || (ir1 == 1 && ir2 == 1 && ir3 == 0 && ir4 == 0 && ir5== 1))
 206:	20 91 68 00 	lds	r18, 0x0068	; 0x800068 <ir1>
 20a:	30 91 69 00 	lds	r19, 0x0069	; 0x800069 <ir1+0x1>
 20e:	21 30       	cpi	r18, 0x01	; 1
 210:	31 05       	cpc	r19, r1
 212:	09 f0       	breq	.+2      	; 0x216 <main+0x19a>
 214:	3e cf       	rjmp	.-388    	; 0x92 <main+0x16>
 216:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <ir2>
 21a:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <ir2+0x1>
 21e:	21 30       	cpi	r18, 0x01	; 1
 220:	31 05       	cpc	r19, r1
 222:	09 f0       	breq	.+2      	; 0x226 <main+0x1aa>
 224:	dc c0       	rjmp	.+440    	; 0x3de <main+0x362>
 226:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <ir3>
 22a:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <ir3+0x1>
 22e:	61 30       	cpi	r22, 0x01	; 1
 230:	71 05       	cpc	r23, r1
 232:	09 f0       	breq	.+2      	; 0x236 <main+0x1ba>
 234:	cc c0       	rjmp	.+408    	; 0x3ce <main+0x352>
 236:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 23a:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 23e:	67 2b       	or	r22, r23
 240:	09 f0       	breq	.+2      	; 0x244 <main+0x1c8>
 242:	c5 c0       	rjmp	.+394    	; 0x3ce <main+0x352>
 244:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <ir5>
 248:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <ir5+0x1>
 24c:	62 30       	cpi	r22, 0x02	; 2
 24e:	71 05       	cpc	r23, r1
 250:	08 f0       	brcs	.+2      	; 0x254 <main+0x1d8>
 252:	bd c0       	rjmp	.+378    	; 0x3ce <main+0x352>
 254:	4f c0       	rjmp	.+158    	; 0x2f4 <main+0x278>
 256:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 25a:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 25e:	67 2b       	or	r22, r23
 260:	39 f4       	brne	.+14     	; 0x270 <main+0x1f4>
 262:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <ir5>
 266:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <ir5+0x1>
 26a:	67 2b       	or	r22, r23
 26c:	09 f4       	brne	.+2      	; 0x270 <main+0x1f4>
 26e:	42 c0       	rjmp	.+132    	; 0x2f4 <main+0x278>
 270:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <ir3>
 274:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <ir3+0x1>
 278:	61 30       	cpi	r22, 0x01	; 1
 27a:	71 05       	cpc	r23, r1
 27c:	21 f5       	brne	.+72     	; 0x2c6 <main+0x24a>
 27e:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 282:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 286:	61 30       	cpi	r22, 0x01	; 1
 288:	71 05       	cpc	r23, r1
 28a:	e9 f4       	brne	.+58     	; 0x2c6 <main+0x24a>
 28c:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <ir5>
 290:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <ir5+0x1>
 294:	67 2b       	or	r22, r23
 296:	71 f1       	breq	.+92     	; 0x2f4 <main+0x278>
 298:	16 c0       	rjmp	.+44     	; 0x2c6 <main+0x24a>
 29a:	21 15       	cp	r18, r1
 29c:	31 05       	cpc	r19, r1
 29e:	99 f4       	brne	.+38     	; 0x2c6 <main+0x24a>
 2a0:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <ir3>
 2a4:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <ir3+0x1>
 2a8:	23 2b       	or	r18, r19
 2aa:	69 f5       	brne	.+90     	; 0x306 <main+0x28a>
 2ac:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2b0:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 2b4:	23 2b       	or	r18, r19
 2b6:	39 f5       	brne	.+78     	; 0x306 <main+0x28a>
 2b8:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <ir5>
 2bc:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <ir5+0x1>
 2c0:	23 2b       	or	r18, r19
 2c2:	c1 f0       	breq	.+48     	; 0x2f4 <main+0x278>
 2c4:	20 c0       	rjmp	.+64     	; 0x306 <main+0x28a>
 2c6:	21 30       	cpi	r18, 0x01	; 1
 2c8:	31 05       	cpc	r19, r1
 2ca:	09 f0       	breq	.+2      	; 0x2ce <main+0x252>
 2cc:	e2 ce       	rjmp	.-572    	; 0x92 <main+0x16>
 2ce:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <ir3>
 2d2:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <ir3+0x1>
 2d6:	23 2b       	or	r18, r19
 2d8:	f1 f4       	brne	.+60     	; 0x316 <main+0x29a>
 2da:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2de:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 2e2:	23 2b       	or	r18, r19
 2e4:	c1 f4       	brne	.+48     	; 0x316 <main+0x29a>
 2e6:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <ir5>
 2ea:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <ir5+0x1>
 2ee:	21 30       	cpi	r18, 0x01	; 1
 2f0:	31 05       	cpc	r19, r1
 2f2:	89 f4       	brne	.+34     	; 0x316 <main+0x29a>
		{
		
		 
			//PORTA = 0b00000000;
			//_delay_us(20);
			PORTA = 0b01100000; // Smooth Right
 2f4:	cb bb       	out	0x1b, r28	; 27
		 
		}
		if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 1 && ir5== 1)
 2f6:	20 91 68 00 	lds	r18, 0x0068	; 0x800068 <ir1>
 2fa:	30 91 69 00 	lds	r19, 0x0069	; 0x800069 <ir1+0x1>
 2fe:	21 30       	cpi	r18, 0x01	; 1
 300:	31 05       	cpc	r19, r1
 302:	09 f0       	breq	.+2      	; 0x306 <main+0x28a>
 304:	c6 ce       	rjmp	.-628    	; 0x92 <main+0x16>
 306:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <ir2>
 30a:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <ir2+0x1>
 30e:	21 30       	cpi	r18, 0x01	; 1
 310:	31 05       	cpc	r19, r1
 312:	09 f0       	breq	.+2      	; 0x316 <main+0x29a>
 314:	be ce       	rjmp	.-644    	; 0x92 <main+0x16>
 316:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <ir3>
 31a:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <ir3+0x1>
 31e:	21 30       	cpi	r18, 0x01	; 1
 320:	31 05       	cpc	r19, r1
 322:	09 f0       	breq	.+2      	; 0x326 <main+0x2aa>
 324:	b6 ce       	rjmp	.-660    	; 0x92 <main+0x16>
 326:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 32a:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 32e:	21 30       	cpi	r18, 0x01	; 1
 330:	31 05       	cpc	r19, r1
 332:	09 f0       	breq	.+2      	; 0x336 <main+0x2ba>
 334:	ae ce       	rjmp	.-676    	; 0x92 <main+0x16>
 336:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <ir5>
 33a:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <ir5+0x1>
 33e:	21 30       	cpi	r18, 0x01	; 1
 340:	31 05       	cpc	r19, r1
 342:	09 f0       	breq	.+2      	; 0x346 <main+0x2ca>
 344:	a6 ce       	rjmp	.-692    	; 0x92 <main+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 346:	25 e8       	ldi	r18, 0x85	; 133
 348:	2a 95       	dec	r18
 34a:	f1 f7       	brne	.-4      	; 0x348 <main+0x2cc>
 34c:	00 00       	nop
		{
	
	
				//PORTA = 0b00000000;
				_delay_us(400);
				PORTA = 0b01010000; // back
 34e:	1b bb       	out	0x1b, r17	; 27
 350:	a0 ce       	rjmp	.-704    	; 0x92 <main+0x16>
		
		if((ir1==1 && ir2 == 1 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==1 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 0))
		{
			PORTA = 0b10100000;
		}
		if((ir1==1 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 1 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==1 && ir2 == 0 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 1))
 352:	21 15       	cp	r18, r1
 354:	31 05       	cpc	r19, r1
 356:	d9 f0       	breq	.+54     	; 0x38e <main+0x312>
 358:	21 30       	cpi	r18, 0x01	; 1
 35a:	31 05       	cpc	r19, r1
 35c:	09 f4       	brne	.+2      	; 0x360 <main+0x2e4>
 35e:	24 cf       	rjmp	.-440    	; 0x1a8 <main+0x12c>
 360:	ca cf       	rjmp	.-108    	; 0x2f6 <main+0x27a>
 362:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 366:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 36a:	21 30       	cpi	r18, 0x01	; 1
 36c:	31 05       	cpc	r19, r1
 36e:	09 f0       	breq	.+2      	; 0x372 <main+0x2f6>
 370:	4a cf       	rjmp	.-364    	; 0x206 <main+0x18a>
 372:	41 cf       	rjmp	.-382    	; 0x1f6 <main+0x17a>
 374:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 378:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 37c:	21 30       	cpi	r18, 0x01	; 1
 37e:	31 05       	cpc	r19, r1
 380:	09 f0       	breq	.+2      	; 0x384 <main+0x308>
 382:	24 cf       	rjmp	.-440    	; 0x1cc <main+0x150>
 384:	38 cf       	rjmp	.-400    	; 0x1f6 <main+0x17a>
		ir4 = bit_is_clear(PIND,5);
		ir5 = bit_is_clear(PIND,6);
		
		
		
		if((ir1==1 && ir2 == 1 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==1 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 0))
 386:	ee 23       	and	r30, r30
 388:	09 f4       	brne	.+2      	; 0x38c <main+0x310>
 38a:	df ce       	rjmp	.-578    	; 0x14a <main+0xce>
 38c:	d0 ce       	rjmp	.-608    	; 0x12e <main+0xb2>
		{
			PORTA = 0b10100000;
		}
		if((ir1==1 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 1 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==1 && ir2 == 0 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 1))
 38e:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <ir3>
 392:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <ir3+0x1>
 396:	23 2b       	or	r18, r19
 398:	69 f3       	breq	.-38     	; 0x374 <main+0x2f8>
 39a:	18 cf       	rjmp	.-464    	; 0x1cc <main+0x150>
 39c:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <ir2>
 3a0:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <ir2+0x1>
 3a4:	21 30       	cpi	r18, 0x01	; 1
 3a6:	31 05       	cpc	r19, r1
 3a8:	09 f0       	breq	.+2      	; 0x3ac <main+0x330>
 3aa:	a5 cf       	rjmp	.-182    	; 0x2f6 <main+0x27a>
 3ac:	ef ce       	rjmp	.-546    	; 0x18c <main+0x110>
 3ae:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <ir2>
 3b2:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <ir2+0x1>
 3b6:	23 2b       	or	r18, r19
 3b8:	09 f4       	brne	.+2      	; 0x3bc <main+0x340>
 3ba:	f6 ce       	rjmp	.-532    	; 0x1a8 <main+0x12c>
 3bc:	2c cf       	rjmp	.-424    	; 0x216 <main+0x19a>
 3be:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <ir2>
 3c2:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <ir2+0x1>
 3c6:	23 2b       	or	r18, r19
 3c8:	09 f4       	brne	.+2      	; 0x3cc <main+0x350>
 3ca:	07 cf       	rjmp	.-498    	; 0x1da <main+0x15e>
 3cc:	62 ce       	rjmp	.-828    	; 0x92 <main+0x16>
			//_delay_us(20);
			PORTA = 0b10010000; // Sharp Left
			}
		}*/
		
		if((ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5== 1) || (ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5== 0) || (ir1 == 1 && ir2 == 1 && ir3 == 0 && ir4 == 0 && ir5== 0) || (ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 1 && ir5== 0) || (ir1 == 1 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5== 0) || (ir1 == 1 && ir2 == 1 && ir3 == 0 && ir4 == 0 && ir5== 1))
 3ce:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <ir3>
 3d2:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <ir3+0x1>
 3d6:	67 2b       	or	r22, r23
 3d8:	09 f4       	brne	.+2      	; 0x3dc <main+0x360>
 3da:	3d cf       	rjmp	.-390    	; 0x256 <main+0x1da>
 3dc:	49 cf       	rjmp	.-366    	; 0x270 <main+0x1f4>
 3de:	21 30       	cpi	r18, 0x01	; 1
 3e0:	31 05       	cpc	r19, r1
 3e2:	09 f0       	breq	.+2      	; 0x3e6 <main+0x36a>
 3e4:	5a cf       	rjmp	.-332    	; 0x29a <main+0x21e>
 3e6:	44 cf       	rjmp	.-376    	; 0x270 <main+0x1f4>
		
		if((ir1==1 && ir2 == 1 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==1 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 0))
		{
			PORTA = 0b10100000;
		}
		if((ir1==1 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 1 && ir3 == 1 && ir4 == 1 && ir5 == 1) || (ir1==1 && ir2 == 0 && ir3 == 0 && ir4 == 1 && ir5 == 1) || (ir1==0 && ir2 == 0 && ir3 == 0 && ir4 == 0 && ir5 == 1))
 3e8:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 3ec:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3f0:	21 30       	cpi	r18, 0x01	; 1
 3f2:	31 05       	cpc	r19, r1
 3f4:	09 f0       	breq	.+2      	; 0x3f8 <main+0x37c>
 3f6:	7f cf       	rjmp	.-258    	; 0x2f6 <main+0x27a>
 3f8:	fe ce       	rjmp	.-516    	; 0x1f6 <main+0x17a>

000003fa <_exit>:
 3fa:	f8 94       	cli

000003fc <__stop_program>:
 3fc:	ff cf       	rjmp	.-2      	; 0x3fc <__stop_program>
