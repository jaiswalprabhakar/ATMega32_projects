
running_servo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000094  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000118  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000574  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004f5  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001d9  00000000  00000000  00000bdd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000db8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ef  00000000  00000000  00000ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  000010cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 48 00 	jmp	0x90	; 0x90 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

void main()
{
	
	//Configure TIMER1
	TCCR1A|=(1 << COM1A1 ) | ( 1<< COM1B1) | (1 << WGM11 );        //NON Inverted PWM
  6c:	8f b5       	in	r24, 0x2f	; 47
  6e:	82 6a       	ori	r24, 0xA2	; 162
  70:	8f bd       	out	0x2f, r24	; 47
	TCCR1B|=( 1 << WGM13) | ( 1 << WGM12 ) | ( 1 << CS11 ) | ( 1 << CS10 ); //PRESCALER=64 MODE 14(FAST PWM)
  72:	8e b5       	in	r24, 0x2e	; 46
  74:	8b 61       	ori	r24, 0x1B	; 27
  76:	8e bd       	out	0x2e, r24	; 46

	ICR1 = 500;  //fPWM=50Hz (Period = 20ms Standard).
  78:	84 ef       	ldi	r24, 0xF4	; 244
  7a:	91 e0       	ldi	r25, 0x01	; 1
  7c:	97 bd       	out	0x27, r25	; 39
  7e:	86 bd       	out	0x26, r24	; 38

	DDRD|=(1<<PD4)|(1<<PD5);   //PWM Pins as Out
  80:	81 b3       	in	r24, 0x11	; 17
  82:	80 63       	ori	r24, 0x30	; 48
  84:	81 bb       	out	0x11, r24	; 17
	{
              //PORTD = 0xFF;
	//	OCR1A= 520;   //0 degree
     //_delay_ms(1)	;	

		OCR1A= 500;  //90 degree
  86:	84 ef       	ldi	r24, 0xF4	; 244
  88:	91 e0       	ldi	r25, 0x01	; 1
  8a:	9b bd       	out	0x2b, r25	; 43
  8c:	8a bd       	out	0x2a, r24	; 42
  8e:	fd cf       	rjmp	.-6      	; 0x8a <main+0x1e>

00000090 <_exit>:
  90:	f8 94       	cli

00000092 <__stop_program>:
  92:	ff cf       	rjmp	.-2      	; 0x92 <__stop_program>
