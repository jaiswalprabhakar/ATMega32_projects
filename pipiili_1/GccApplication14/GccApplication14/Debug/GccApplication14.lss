
GccApplication14.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000036c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800060  00800060  000003e0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003e0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000410  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  0000044c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000062d  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000549  00000000  00000000  00000aa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003c6  00000000  00000000  00000fea  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  000013b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000320  00000000  00000000  000013e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001704  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	ac 36       	cpi	r26, 0x6C	; 108
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 71 00 	call	0xe2	; 0xe2 <main>
  74:	0c 94 b4 01 	jmp	0x368	; 0x368 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <get_ir_state>:
#include <avr/sfr_defs.h>
#include <util/delay.h>
int ir1,ir2,ir3,ir4,ir5;
int count = 0,check_point = 0;
void get_ir_state(){
	ir1 = bit_is_clear(PIND,3);
  7c:	90 b3       	in	r25, 0x10	; 16
  7e:	96 95       	lsr	r25
  80:	96 95       	lsr	r25
  82:	96 95       	lsr	r25
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	98 27       	eor	r25, r24
  88:	91 70       	andi	r25, 0x01	; 1
  8a:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <ir1>
  8e:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <ir1+0x1>
	ir2 = bit_is_clear(PIND,4);
  92:	90 b3       	in	r25, 0x10	; 16
  94:	92 95       	swap	r25
  96:	9f 70       	andi	r25, 0x0F	; 15
  98:	98 27       	eor	r25, r24
  9a:	91 70       	andi	r25, 0x01	; 1
  9c:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <ir2>
  a0:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <ir2+0x1>
	ir3 = bit_is_clear(PIND,5);
  a4:	90 b3       	in	r25, 0x10	; 16
  a6:	92 95       	swap	r25
  a8:	96 95       	lsr	r25
  aa:	97 70       	andi	r25, 0x07	; 7
  ac:	98 27       	eor	r25, r24
  ae:	91 70       	andi	r25, 0x01	; 1
  b0:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <ir3>
  b4:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <ir3+0x1>
	ir4 = bit_is_clear(PIND,2);
  b8:	90 b3       	in	r25, 0x10	; 16
  ba:	96 95       	lsr	r25
  bc:	96 95       	lsr	r25
  be:	98 27       	eor	r25, r24
  c0:	91 70       	andi	r25, 0x01	; 1
  c2:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <ir4>
  c6:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <ir4+0x1>
	ir5 = bit_is_clear(PIND,6);
  ca:	90 b3       	in	r25, 0x10	; 16
  cc:	92 95       	swap	r25
  ce:	96 95       	lsr	r25
  d0:	96 95       	lsr	r25
  d2:	93 70       	andi	r25, 0x03	; 3
  d4:	89 27       	eor	r24, r25
  d6:	81 70       	andi	r24, 0x01	; 1
  d8:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <ir5>
  dc:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <ir5+0x1>
  e0:	08 95       	ret

000000e2 <main>:
	
}

int main()
{
	DDRA = 0xFF;
  e2:	8f ef       	ldi	r24, 0xFF	; 255
  e4:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0x00;
  e6:	11 ba       	out	0x11, r1	; 17
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5 == 0){
				PORTA = 0b10010000;
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) && (check_point == 0)){
				PORTA = 0b01100000;
  e8:	0f 2e       	mov	r0, r31
  ea:	f0 e6       	ldi	r31, 0x60	; 96
  ec:	ff 2e       	mov	r15, r31
  ee:	f0 2d       	mov	r31, r0
				while(1){
					get_ir_state();
					if(ir1 == 0 && ir2 == 0 && ir3 == 1 && ir4 == 0 && ir5 == 0){
						PORTA = 0b10100000;
  f0:	10 ea       	ldi	r17, 0xA0	; 160
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 1)
			PORTA = 0b00100000;
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5 == 0){
				PORTA = 0b10010000;
  f2:	00 e9       	ldi	r16, 0x90	; 144
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 0)
			PORTA = 0b10000000;
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 1)
			PORTA = 0b00100000;
  f4:	d0 e2       	ldi	r29, 0x20	; 32
			if((ir1 == 0 && ir2 == 0 && ir3 == 1)){
				PORTA = 0b00100000;
			}
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 0)
			PORTA = 0b10000000;
  f6:	c0 e8       	ldi	r28, 0x80	; 128
{
	DDRA = 0xFF;
	DDRD = 0x00;
	
	while(1){
			ir1 = ir2 = ir3 = ir4 = ir5 = 0;
  f8:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <ir5+0x1>
  fc:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <ir5>
 100:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <ir4+0x1>
 104:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <ir4>
 108:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <ir3+0x1>
 10c:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <ir3>
 110:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <ir2+0x1>
 114:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <ir2>
 118:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <ir1+0x1>
 11c:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <ir1>
			
		get_ir_state();
 120:	0e 94 3e 00 	call	0x7c	; 0x7c <get_ir_state>
			
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 0){
 124:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 128:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 12c:	89 2b       	or	r24, r25
 12e:	09 f0       	breq	.+2      	; 0x132 <main+0x50>
 130:	fe c0       	rjmp	.+508    	; 0x32e <main+0x24c>
 132:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 136:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	09 f5       	brne	.+66     	; 0x180 <main+0x9e>
 13e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 142:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 146:	89 2b       	or	r24, r25
 148:	d9 f4       	brne	.+54     	; 0x180 <main+0x9e>
				PORTA = 0b10100000;
 14a:	1b bb       	out	0x1b, r17	; 27
			}
			if((ir1 == 1 && ir2 == 0 && ir3 == 0)){
 14c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 150:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	69 f4       	brne	.+26     	; 0x172 <main+0x90>
 158:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 15c:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 160:	89 2b       	or	r24, r25
 162:	09 f5       	brne	.+66     	; 0x1a6 <main+0xc4>
 164:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 168:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 16c:	89 2b       	or	r24, r25
 16e:	d9 f4       	brne	.+54     	; 0x1a6 <main+0xc4>
				PORTA = 0b10000000;
 170:	cb bb       	out	0x1b, r28	; 27
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1)){
 172:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 176:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 17a:	00 97       	sbiw	r24, 0x00	; 0
 17c:	09 f0       	breq	.+2      	; 0x180 <main+0x9e>
 17e:	cb c0       	rjmp	.+406    	; 0x316 <main+0x234>
 180:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 184:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 188:	89 2b       	or	r24, r25
 18a:	11 f5       	brne	.+68     	; 0x1d0 <main+0xee>
 18c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 190:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	e1 f4       	brne	.+56     	; 0x1d0 <main+0xee>
				PORTA = 0b00100000;
 198:	db bb       	out	0x1b, r29	; 27
			}
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 0)
 19a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 19e:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	71 f4       	brne	.+28     	; 0x1c2 <main+0xe0>
 1a6:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 1aa:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	e1 f4       	brne	.+56     	; 0x1ea <main+0x108>
 1b2:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 1b6:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 1ba:	89 2b       	or	r24, r25
 1bc:	09 f0       	breq	.+2      	; 0x1c0 <main+0xde>
 1be:	cb c0       	rjmp	.+406    	; 0x356 <main+0x274>
			PORTA = 0b10000000;
 1c0:	cb bb       	out	0x1b, r28	; 27
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 1)
 1c2:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 1c6:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 1ca:	89 2b       	or	r24, r25
 1cc:	09 f0       	breq	.+2      	; 0x1d0 <main+0xee>
 1ce:	bb c0       	rjmp	.+374    	; 0x346 <main+0x264>
 1d0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 1d4:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	99 f5       	brne	.+102    	; 0x242 <main+0x160>
 1dc:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 1e0:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	69 f5       	brne	.+90     	; 0x242 <main+0x160>
			PORTA = 0b00100000;
 1e8:	db bb       	out	0x1b, r29	; 27
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5 == 0){
 1ea:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 1ee:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 1f2:	81 30       	cpi	r24, 0x01	; 1
 1f4:	91 05       	cpc	r25, r1
 1f6:	09 f0       	breq	.+2      	; 0x1fa <main+0x118>
 1f8:	91 c0       	rjmp	.+290    	; 0x31c <main+0x23a>
 1fa:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 1fe:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	09 f0       	breq	.+2      	; 0x208 <main+0x126>
 206:	69 c0       	rjmp	.+210    	; 0x2da <main+0x1f8>
 208:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 20c:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 210:	01 97       	sbiw	r24, 0x01	; 1
 212:	09 f0       	breq	.+2      	; 0x216 <main+0x134>
 214:	62 c0       	rjmp	.+196    	; 0x2da <main+0x1f8>
 216:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ir4>
 21a:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <ir4+0x1>
 21e:	89 2b       	or	r24, r25
 220:	09 f0       	breq	.+2      	; 0x224 <main+0x142>
 222:	5b c0       	rjmp	.+182    	; 0x2da <main+0x1f8>
 224:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <ir5>
 228:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <ir5+0x1>
 22c:	89 2b       	or	r24, r25
 22e:	09 f0       	breq	.+2      	; 0x232 <main+0x150>
 230:	54 c0       	rjmp	.+168    	; 0x2da <main+0x1f8>
				PORTA = 0b10010000;
 232:	0b bb       	out	0x1b, r16	; 27
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) && (check_point == 0)){
 234:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 238:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 23c:	89 2b       	or	r24, r25
 23e:	09 f0       	breq	.+2      	; 0x242 <main+0x160>
 240:	45 c0       	rjmp	.+138    	; 0x2cc <main+0x1ea>
 242:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 246:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 24a:	89 2b       	or	r24, r25
 24c:	09 f0       	breq	.+2      	; 0x250 <main+0x16e>
 24e:	54 cf       	rjmp	.-344    	; 0xf8 <main+0x16>
 250:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 254:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	09 f0       	breq	.+2      	; 0x25e <main+0x17c>
 25c:	4d cf       	rjmp	.-358    	; 0xf8 <main+0x16>
 25e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ir4>
 262:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <ir4+0x1>
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	09 f0       	breq	.+2      	; 0x26c <main+0x18a>
 26a:	46 cf       	rjmp	.-372    	; 0xf8 <main+0x16>
 26c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <ir5>
 270:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <ir5+0x1>
 274:	01 97       	sbiw	r24, 0x01	; 1
 276:	09 f0       	breq	.+2      	; 0x27a <main+0x198>
 278:	3f cf       	rjmp	.-386    	; 0xf8 <main+0x16>
 27a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 27e:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 282:	89 2b       	or	r24, r25
 284:	09 f0       	breq	.+2      	; 0x288 <main+0x1a6>
 286:	38 cf       	rjmp	.-400    	; 0xf8 <main+0x16>
				PORTA = 0b01100000;
 288:	fb ba       	out	0x1b, r15	; 27
				while(1){
					get_ir_state();
 28a:	0e 94 3e 00 	call	0x7c	; 0x7c <get_ir_state>
					if(ir1 == 0 && ir2 == 0 && ir3 == 1 && ir4 == 0 && ir5 == 0){
 28e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 292:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 296:	89 2b       	or	r24, r25
 298:	c1 f7       	brne	.-16     	; 0x28a <main+0x1a8>
 29a:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 29e:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 2a2:	89 2b       	or	r24, r25
 2a4:	91 f7       	brne	.-28     	; 0x28a <main+0x1a8>
 2a6:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 2aa:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	61 f7       	brne	.-40     	; 0x28a <main+0x1a8>
 2b2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ir4>
 2b6:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <ir4+0x1>
 2ba:	89 2b       	or	r24, r25
 2bc:	31 f7       	brne	.-52     	; 0x28a <main+0x1a8>
 2be:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <ir5>
 2c2:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <ir5+0x1>
 2c6:	89 2b       	or	r24, r25
 2c8:	01 f7       	brne	.-64     	; 0x28a <main+0x1a8>
						PORTA = 0b10100000;
 2ca:	1b bb       	out	0x1b, r17	; 27
					}
				}
			}
			now_go_back : 
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4==1 && ir5 ==1)
 2cc:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 2d0:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	09 f0       	breq	.+2      	; 0x2da <main+0x1f8>
 2d8:	0f cf       	rjmp	.-482    	; 0xf8 <main+0x16>
 2da:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ir2>
 2de:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ir2+0x1>
 2e2:	01 97       	sbiw	r24, 0x01	; 1
 2e4:	09 f0       	breq	.+2      	; 0x2e8 <main+0x206>
 2e6:	08 cf       	rjmp	.-496    	; 0xf8 <main+0x16>
 2e8:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ir3>
 2ec:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ir3+0x1>
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	09 f0       	breq	.+2      	; 0x2f6 <main+0x214>
 2f4:	01 cf       	rjmp	.-510    	; 0xf8 <main+0x16>
 2f6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ir4>
 2fa:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <ir4+0x1>
 2fe:	01 97       	sbiw	r24, 0x01	; 1
 300:	09 f0       	breq	.+2      	; 0x304 <main+0x222>
 302:	fa ce       	rjmp	.-524    	; 0xf8 <main+0x16>
 304:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <ir5>
 308:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <ir5+0x1>
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	09 f0       	breq	.+2      	; 0x312 <main+0x230>
 310:	f3 ce       	rjmp	.-538    	; 0xf8 <main+0x16>
			{	PORTA = 0x00;
 312:	1b ba       	out	0x1b, r1	; 27
 314:	f1 ce       	rjmp	.-542    	; 0xf8 <main+0x16>
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1)){
				PORTA = 0b00100000;
			}
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 0)
 316:	01 97       	sbiw	r24, 0x01	; 1
 318:	89 f4       	brne	.+34     	; 0x33c <main+0x25a>
 31a:	45 cf       	rjmp	.-374    	; 0x1a6 <main+0xc4>
			PORTA = 0b00100000;
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5 == 0){
				PORTA = 0b10010000;
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1 && ir4 == 1 && ir5 == 1) && (check_point == 0)){
 31c:	89 2b       	or	r24, r25
 31e:	09 f4       	brne	.+2      	; 0x322 <main+0x240>
 320:	90 cf       	rjmp	.-224    	; 0x242 <main+0x160>
 322:	ea ce       	rjmp	.-556    	; 0xf8 <main+0x16>
				PORTA = 0b10100000;
			}
			if((ir1 == 1 && ir2 == 0 && ir3 == 0)){
				PORTA = 0b10000000;
			}
			if((ir1 == 0 && ir2 == 0 && ir3 == 1)){
 324:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 328:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 32c:	f4 cf       	rjmp	.-24     	; 0x316 <main+0x234>
			
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 0){
				PORTA = 0b10100000;
			}
			if((ir1 == 1 && ir2 == 0 && ir3 == 0)){
 32e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 332:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 336:	01 97       	sbiw	r24, 0x01	; 1
 338:	a9 f7       	brne	.-22     	; 0x324 <main+0x242>
 33a:	0e cf       	rjmp	.-484    	; 0x158 <main+0x76>
			PORTA = 0b10000000;
			
			if(ir1 == 0 && ir2 == 1 && ir3 == 1)
			PORTA = 0b00100000;
			
			if(ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 0 && ir5 == 0){
 33c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 340:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 344:	eb cf       	rjmp	.-42     	; 0x31c <main+0x23a>
 346:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 34a:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	09 f4       	brne	.+2      	; 0x354 <main+0x272>
 352:	53 cf       	rjmp	.-346    	; 0x1fa <main+0x118>
 354:	d1 ce       	rjmp	.-606    	; 0xf8 <main+0x16>
 356:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <ir1>
 35a:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <ir1+0x1>
 35e:	81 30       	cpi	r24, 0x01	; 1
 360:	91 05       	cpc	r25, r1
 362:	09 f4       	brne	.+2      	; 0x366 <main+0x284>
 364:	51 cf       	rjmp	.-350    	; 0x208 <main+0x126>
 366:	da cf       	rjmp	.-76     	; 0x31c <main+0x23a>

00000368 <_exit>:
 368:	f8 94       	cli

0000036a <__stop_program>:
 36a:	ff cf       	rjmp	.-2      	; 0x36a <__stop_program>
